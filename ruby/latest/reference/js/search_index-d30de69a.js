var search_data = {"index":{"searchIndex":["announcement","apps","auth","files","frankly","franklyclient","franklyclienttest","generic","message","object","rooms","sessions","users","util","build_headers()","build_url()","close()","create()","create()","create_announcement()","create_announcement()","create_file()","create_file()","create_room()","create_room()","create_room_announcer()","create_room_announcer()","create_room_member()","create_room_member()","create_room_message()","create_room_message()","create_room_message_flag()","create_room_message_flag()","create_room_moderator()","create_room_moderator()","create_room_owner()","create_room_owner()","create_room_subscriber()","create_room_subscriber()","create_user()","create_user()","delete()","delete()","delete_announcement()","delete_announcement()","delete_room()","delete_room()","delete_room_announcer()","delete_room_announcer()","delete_room_member()","delete_room_member()","delete_room_moderator()","delete_room_moderator()","delete_room_owner()","delete_room_owner()","delete_room_subscriber()","delete_room_subscriber()","delete_session()","delete_session()","delete_user()","delete_user()","generate_identity_token()","make_base_address()","new()","nonce()","open()","open()","parse_json_string()","read()","read()","read_announcement()","read_announcement()","read_announcement_list()","read_announcement_list()","read_announcement_room_list()","read_announcement_room_list()","read_app()","read_app()","read_room()","read_room()","read_room_announcer_list()","read_room_announcer_list()","read_room_count()","read_room_count()","read_room_list()","read_room_list()","read_room_member_list()","read_room_member_list()","read_room_message()","read_room_message()","read_room_message_list()","read_room_message_list()","read_room_moderator_list()","read_room_moderator_list()","read_room_owner_list()","read_room_owner_list()","read_room_participant_list()","read_room_participant_list()","read_room_subscriber_list()","read_room_subscriber_list()","read_session()","read_session()","read_user()","read_user()","read_user_ban()","read_user_ban()","setup()","t_announcement_functions()","t_app_functions()","t_file_functions()","t_message_functions()","t_room_functions()","t_room_roles()","t_session_functions()","t_user_functions()","test_announcement_functions()","test_app_functions()","test_file_functions()","test_message_functions()","test_open()","test_room_functions()","test_room_roles()","test_session_functions()","test_user_functions()","update()","update()","update_file()","update_file()","update_file_from_path()","update_file_from_path()","update_room()","update_room()","update_user()","update_user()","upload()","upload()","upload_file()","upload_file()","upload_file_from_path()","upload_file_from_path()","gemfile","license","readme","rakefile","created.rid","frankly-ruby.gemspec"],"longSearchIndex":["announcement","apps","auth","files","frankly","franklyclient","franklyclienttest","generic","message","object","rooms","sessions","users","util","util::build_headers()","util::build_url()","franklyclient#close()","franklyclient#create()","generic::create()","announcement::create_announcement()","franklyclient#create_announcement()","files::create_file()","franklyclient#create_file()","franklyclient#create_room()","rooms::create_room()","franklyclient#create_room_announcer()","rooms::create_room_announcer()","franklyclient#create_room_member()","rooms::create_room_member()","franklyclient#create_room_message()","message::create_room_message()","franklyclient#create_room_message_flag()","message::create_room_message_flag()","franklyclient#create_room_moderator()","rooms::create_room_moderator()","franklyclient#create_room_owner()","rooms::create_room_owner()","franklyclient#create_room_subscriber()","rooms::create_room_subscriber()","franklyclient#create_user()","users::create_user()","franklyclient#delete()","generic::delete()","announcement::delete_announcement()","franklyclient#delete_announcement()","franklyclient#delete_room()","rooms::delete_room()","franklyclient#delete_room_announcer()","rooms::delete_room_announcer()","franklyclient#delete_room_member()","rooms::delete_room_member()","franklyclient#delete_room_moderator()","rooms::delete_room_moderator()","franklyclient#delete_room_owner()","rooms::delete_room_owner()","franklyclient#delete_room_subscriber()","rooms::delete_room_subscriber()","franklyclient#delete_session()","sessions::delete_session()","franklyclient#delete_user()","users::delete_user()","object#generate_identity_token()","util::make_base_address()","franklyclient::new()","auth::nonce()","auth::open()","franklyclient#open()","util::parse_json_string()","franklyclient#read()","generic::read()","announcement::read_announcement()","franklyclient#read_announcement()","announcement::read_announcement_list()","franklyclient#read_announcement_list()","announcement::read_announcement_room_list()","franklyclient#read_announcement_room_list()","apps::read_app()","franklyclient#read_app()","franklyclient#read_room()","rooms::read_room()","franklyclient#read_room_announcer_list()","rooms::read_room_announcer_list()","franklyclient#read_room_count()","rooms::read_room_count()","franklyclient#read_room_list()","rooms::read_room_list()","franklyclient#read_room_member_list()","rooms::read_room_member_list()","franklyclient#read_room_message()","message::read_room_message()","franklyclient#read_room_message_list()","message::read_room_message_list()","franklyclient#read_room_moderator_list()","rooms::read_room_moderator_list()","franklyclient#read_room_owner_list()","rooms::read_room_owner_list()","franklyclient#read_room_participant_list()","rooms::read_room_participant_list()","franklyclient#read_room_subscriber_list()","rooms::read_room_subscriber_list()","franklyclient#read_session()","sessions::read_session()","franklyclient#read_user()","users::read_user()","franklyclient#read_user_ban()","users::read_user_ban()","franklyclienttest#setup()","franklyclienttest#t_announcement_functions()","franklyclienttest#t_app_functions()","franklyclienttest#t_file_functions()","franklyclienttest#t_message_functions()","franklyclienttest#t_room_functions()","franklyclienttest#t_room_roles()","franklyclienttest#t_session_functions()","franklyclienttest#t_user_functions()","franklyclienttest#test_announcement_functions()","franklyclienttest#test_app_functions()","franklyclienttest#test_file_functions()","franklyclienttest#test_message_functions()","franklyclienttest#test_open()","franklyclienttest#test_room_functions()","franklyclienttest#test_room_roles()","franklyclienttest#test_session_functions()","franklyclienttest#test_user_functions()","franklyclient#update()","generic::update()","files::update_file()","franklyclient#update_file()","files::update_file_from_path()","franklyclient#update_file_from_path()","franklyclient#update_room()","rooms::update_room()","franklyclient#update_user()","users::update_user()","franklyclient#upload()","generic::upload()","files::upload_file()","franklyclient#upload_file()","files::upload_file_from_path()","franklyclient#upload_file_from_path()","","","","","",""],"info":[["Announcement","","Announcement.html","","<p>@!visibility private\n"],["Apps","","Apps.html","","<p>@!visibility private\n"],["Auth","","Auth.html","","<p>@!visibility private\n"],["Files","","Files.html","","<p>@!visibility private\n"],["Frankly","","Frankly.html","",""],["FranklyClient","","FranklyClient.html","","<p>Instances of this class can be used to authenticate and query the Frankly\nREST APIs.\n"],["FranklyClientTest","","FranklyClientTest.html","",""],["Generic","","Generic.html","","<p>@!visibility private\n"],["Message","","Message.html","","<p>@!visibility private\n"],["Object","","Object.html","",""],["Rooms","","Rooms.html","","<p>@!visibility private\n"],["Sessions","","Sessions.html","","<p>@!visibility private\n"],["Users","","Users.html","","<p>@!visibility private\n"],["Util","","Util.html","","<p>@!visibility private\n"],["build_headers","Util","Util.html#method-c-build_headers","(address, *args)","<p>one argument is a cookie two arguments is key and secret\n"],["build_url","Util","Util.html#method-c-build_url","(base_url, path)",""],["close","FranklyClient","FranklyClient.html#method-i-close","()","<p>Discards all internal state maintained by this client.\n"],["create","FranklyClient","FranklyClient.html#method-i-create","(path, params = {}, payload = {})","<p>This method exposes a generic interface for creating objects through the\nFrankly API. Every create_* …\n"],["create","Generic","Generic.html#method-c-create","(address, headers, path, params, payload)",""],["create_announcement","Announcement","Announcement.html#method-c-create_announcement","(address, headers, payload)",""],["create_announcement","FranklyClient","FranklyClient.html#method-i-create_announcement","(payload)","<p>Creates a new announcement object in the app. The properties of that new\nannouncement are given as hash …\n"],["create_file","Files","Files.html#method-c-create_file","(address, headers, payload)",""],["create_file","FranklyClient","FranklyClient.html#method-i-create_file","(payload)","<p>Creates a new file object on Frankly servers and returns that object. The\nproperties of that new file …\n"],["create_room","FranklyClient","FranklyClient.html#method-i-create_room","(payload)","<p>Creates a new room object in the app. The properties of that new room are\ngiven as hash to the method. …\n"],["create_room","Rooms","Rooms.html#method-c-create_room","(address, headers, payload)",""],["create_room_announcer","FranklyClient","FranklyClient.html#method-i-create_room_announcer","(room_id, user_id)","<p>This method gives the user with id user_id the role of announcer in the\nroom with id room_id\n<p>@param room_id …\n"],["create_room_announcer","Rooms","Rooms.html#method-c-create_room_announcer","(address, headers, room_id, user_id)",""],["create_room_member","FranklyClient","FranklyClient.html#method-i-create_room_member","(room_id, user_id)","<p>This method gives the user with id user_id the role of member in the room\nwith id room_id\n<p>@param room_id …\n"],["create_room_member","Rooms","Rooms.html#method-c-create_room_member","(address, headers, room_id, user_id)",""],["create_room_message","FranklyClient","FranklyClient.html#method-i-create_room_message","(room_id, payload)","<p>Creates a new message object in the room with the id specified in the first\nargument. The properties …\n"],["create_room_message","Message","Message.html#method-c-create_room_message","(address, headers, room_id, payload)",""],["create_room_message_flag","FranklyClient","FranklyClient.html#method-i-create_room_message_flag","(room_id, message_id)","<p>This method flags the message with id message_id in the room with id\nroom_id.\n<p>@param room_id [Int]\n\n<pre>The ...</pre>\n"],["create_room_message_flag","Message","Message.html#method-c-create_room_message_flag","(address, headers, room_id, message_id)",""],["create_room_moderator","FranklyClient","FranklyClient.html#method-i-create_room_moderator","(room_id, user_id)","<p>This method gives the user with id user_id the role of moderator in the\nroom with id room_id\n<p>@param room_id …\n"],["create_room_moderator","Rooms","Rooms.html#method-c-create_room_moderator","(address, headers, room_id, user_id)",""],["create_room_owner","FranklyClient","FranklyClient.html#method-i-create_room_owner","(room_id, user_id)","<p>This method gives the user with id user_id the role of owner in the room\nwith id room_id.\n<p>@param room_id …\n"],["create_room_owner","Rooms","Rooms.html#method-c-create_room_owner","(address, headers, room_id, user_id)",""],["create_room_subscriber","FranklyClient","FranklyClient.html#method-i-create_room_subscriber","(room_id, user_id)","<p>This method gives the user with id user_id the role of subscriber in the\nroom with id room_id\n<p>@param  …\n"],["create_room_subscriber","Rooms","Rooms.html#method-c-create_room_subscriber","(address, headers, room_id, user_id)",""],["create_user","FranklyClient","FranklyClient.html#method-i-create_user","(payload)","<p>Creates a new user in the app. The properties of that new user are given as\nhash to the method.\n<p>@param …\n"],["create_user","Users","Users.html#method-c-create_user","(address, headers, payload)",""],["delete","FranklyClient","FranklyClient.html#method-i-delete","(path, params = {}, payload = {})","<p>This method exposes a generic interface for deleting objects through the\nFrankly API. Every delete_* …\n"],["delete","Generic","Generic.html#method-c-delete","(address, headers, path, params, payload)",""],["delete_announcement","Announcement","Announcement.html#method-c-delete_announcement","(address, headers, announcement_id)",""],["delete_announcement","FranklyClient","FranklyClient.html#method-i-delete_announcement","(announcement_id)","<p>Deletes the announcement object with the id sepecified in the first\nargument. Note that deleting an announcement …\n"],["delete_room","FranklyClient","FranklyClient.html#method-i-delete_room","(room_id)","<p>Deletes the room object with the id sepecified in the first argument. Note\nthat this will cause all messages …\n"],["delete_room","Rooms","Rooms.html#method-c-delete_room","(address, headers, room_id)",""],["delete_room_announcer","FranklyClient","FranklyClient.html#method-i-delete_room_announcer","(room_id, user_id)","<p>This method removes the role of announcer from the user with id user_id in\nthe room with id room_id\n<p>@param …\n"],["delete_room_announcer","Rooms","Rooms.html#method-c-delete_room_announcer","(address, headers, room_id, user_id)",""],["delete_room_member","FranklyClient","FranklyClient.html#method-i-delete_room_member","(room_id, user_id)","<p>This method removes the role of member from the user with id user_id in the\nroom with id room_id\n<p>@param …\n"],["delete_room_member","Rooms","Rooms.html#method-c-delete_room_member","(address, headers, room_id, user_id)",""],["delete_room_moderator","FranklyClient","FranklyClient.html#method-i-delete_room_moderator","(room_id, user_id)","<p>This method removes the role of moderator from the user with id user_id in\nthe room with id room_id\n<p>@param …\n"],["delete_room_moderator","Rooms","Rooms.html#method-c-delete_room_moderator","(address, headers, room_id, user_id)",""],["delete_room_owner","FranklyClient","FranklyClient.html#method-i-delete_room_owner","(room_id, user_id)","<p>This method removes the role of owner from the user with id user_id in the\nroom with id room_id\n<p>@param …\n"],["delete_room_owner","Rooms","Rooms.html#method-c-delete_room_owner","(address, headers, room_id, user_id)",""],["delete_room_subscriber","FranklyClient","FranklyClient.html#method-i-delete_room_subscriber","(room_id, user_id)","<p>This method removes the subscriber role from the user with id user_id in\nthe room with id room_id\n<p>@param …\n"],["delete_room_subscriber","Rooms","Rooms.html#method-c-delete_room_subscriber","(address, headers, room_id, user_id)",""],["delete_session","FranklyClient","FranklyClient.html#method-i-delete_session","()","<p>This method deletes the current session. After this function is called, the\nother functions will return …\n"],["delete_session","Sessions","Sessions.html#method-c-delete_session","(address, headers)",""],["delete_user","FranklyClient","FranklyClient.html#method-i-delete_user","(user_id)","<p>Deletes the user object with the id sepecified in the first argument.\n<p>@param room_id [Int]\n\n<pre>The identifier ...</pre>\n"],["delete_user","Users","Users.html#method-c-delete_user","(address, headers, user_id)",""],["generate_identity_token","Object","Object.html#method-i-generate_identity_token","(app_key, app_secret, nonce, user_id = nil, role = nil)","<p>This function generates an identity token suitable for a single\nauthentication attempt of a client against …\n"],["make_base_address","Util","Util.html#method-c-make_base_address","(address)",""],["new","FranklyClient","FranklyClient.html#method-c-new","(address = 'https:')",""],["nonce","Auth","Auth.html#method-c-nonce","(address)",""],["open","Auth","Auth.html#method-c-open","(address, identity_token)",""],["open","FranklyClient","FranklyClient.html#method-i-open","(*args)","<p>This should be the first method called on an instance of FranklyClient,\nafter succesfully returning the …\n"],["parse_json_string","Util","Util.html#method-c-parse_json_string","(string)",""],["read","FranklyClient","FranklyClient.html#method-i-read","(path, params = {}, payload = {})","<p>This method exposes a generic interface for reading objects through the\nFrankly API. Every read_* method …\n"],["read","Generic","Generic.html#method-c-read","(address, headers, path, params, payload)",""],["read_announcement","Announcement","Announcement.html#method-c-read_announcement","(address, headers, announcement_id)",""],["read_announcement","FranklyClient","FranklyClient.html#method-i-read_announcement","(announcement_id)","<p>Retrieves the announcement object with the id sepecified in the first\nargument.\n<p>@param announcement_id …\n"],["read_announcement_list","Announcement","Announcement.html#method-c-read_announcement_list","(address, headers)",""],["read_announcement_list","FranklyClient","FranklyClient.html#method-i-read_announcement_list","()","<p>Retrieves the list of announcements that are available in the app.\n<p>@return [Array]\n\n<pre>An array of annoucement ...</pre>\n"],["read_announcement_room_list","Announcement","Announcement.html#method-c-read_announcement_room_list","(address, headers, announcement_id)",""],["read_announcement_room_list","FranklyClient","FranklyClient.html#method-i-read_announcement_room_list","(announcement_id)","<p>Retrieves the list of rooms that an annoucement has been published to.\n<p>@param announcement_id [Int]\n\n<pre>The ...</pre>\n"],["read_app","Apps","Apps.html#method-c-read_app","(address, headers, app_id)",""],["read_app","FranklyClient","FranklyClient.html#method-i-read_app","(app_id)","<p>This method returns a hash that contains all of the properties of the\napplication with it app_id. See …\n"],["read_room","FranklyClient","FranklyClient.html#method-i-read_room","(room_id)","<p>Retrieves the room object with the id specified in the first argument.\n<p>@param room_id [Int]\n\n<pre>The identifier ...</pre>\n"],["read_room","Rooms","Rooms.html#method-c-read_room","(address, headers, room_id)",""],["read_room_announcer_list","FranklyClient","FranklyClient.html#method-i-read_room_announcer_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom with the role of announcer …\n"],["read_room_announcer_list","Rooms","Rooms.html#method-c-read_room_announcer_list","(address, headers, room_id)",""],["read_room_count","FranklyClient","FranklyClient.html#method-i-read_room_count","(room_id)","<p>The method returns a hash that contains the number of active, subscribed,\nand online users in the room …\n"],["read_room_count","Rooms","Rooms.html#method-c-read_room_count","(address, headers, room_id)",""],["read_room_list","FranklyClient","FranklyClient.html#method-i-read_room_list","()","<p>Retrieves the list of all available rooms in the app.\n<p>@return [Array]\n\n<pre>A list of hashes ordered by id, which ...</pre>\n"],["read_room_list","Rooms","Rooms.html#method-c-read_room_list","(address, headers)",""],["read_room_member_list","FranklyClient","FranklyClient.html#method-i-read_room_member_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom with the role of member …\n"],["read_room_member_list","Rooms","Rooms.html#method-c-read_room_member_list","(address, headers, room_id)",""],["read_room_message","FranklyClient","FranklyClient.html#method-i-read_room_message","(room_id, message_id)","<p>Retrieves the message object with the id sepecified in first argument from\nthe room with the id specified …\n"],["read_room_message","Message","Message.html#method-c-read_room_message","(address, headers, room_id, message_id)",""],["read_room_message_list","FranklyClient","FranklyClient.html#method-i-read_room_message_list","(room_id, params)","<p>Fetches a list of messages from the room with the id specified in the first\nargument.\n<p>@param room_id [Int] …\n"],["read_room_message_list","Message","Message.html#method-c-read_room_message_list","(address, headers, room_id, params)",""],["read_room_moderator_list","FranklyClient","FranklyClient.html#method-i-read_room_moderator_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom with the role of moderator …\n"],["read_room_moderator_list","Rooms","Rooms.html#method-c-read_room_moderator_list","(address, headers, room_id)",""],["read_room_owner_list","FranklyClient","FranklyClient.html#method-i-read_room_owner_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom with the role of owner. …\n"],["read_room_owner_list","Rooms","Rooms.html#method-c-read_room_owner_list","(address, headers, room_id)",""],["read_room_participant_list","FranklyClient","FranklyClient.html#method-i-read_room_participant_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom.\n<p>@param room_id [Int]\n\n<pre>The ...</pre>\n"],["read_room_participant_list","Rooms","Rooms.html#method-c-read_room_participant_list","(address, headers, room_id)",""],["read_room_subscriber_list","FranklyClient","FranklyClient.html#method-i-read_room_subscriber_list","(room_id)","<p>The method returns a hash that contains a list of all of the users in the\nroom with the role of subscriber …\n"],["read_room_subscriber_list","Rooms","Rooms.html#method-c-read_room_subscriber_list","(address, headers, room_id)",""],["read_session","FranklyClient","FranklyClient.html#method-i-read_session","()","<p>This method returns an object representing the current user&#39;s session\nSee the Sessions section above …\n"],["read_session","Sessions","Sessions.html#method-c-read_session","(address, headers)",""],["read_user","FranklyClient","FranklyClient.html#method-i-read_user","(user_id)","<p>Retrieves the user object with the id specified in the first argument.\n<p>@param user_id [Int]\n\n<pre>The identifier ...</pre>\n"],["read_user","Users","Users.html#method-c-read_user","(address, headers, user_id)",""],["read_user_ban","FranklyClient","FranklyClient.html#method-i-read_user_ban","(user_id)","<p>Retrieves the ban status of the user with the id specified in the first\nargument.\n<p>@param user_id [Int] …\n"],["read_user_ban","Users","Users.html#method-c-read_user_ban","(address, headers, user_id)",""],["setup","FranklyClientTest","FranklyClientTest.html#method-i-setup","()",""],["t_announcement_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_announcement_functions","(client)",""],["t_app_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_app_functions","(client)",""],["t_file_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_file_functions","(client)",""],["t_message_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_message_functions","(client)",""],["t_room_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_room_functions","(client)",""],["t_room_roles","FranklyClientTest","FranklyClientTest.html#method-i-t_room_roles","(client)",""],["t_session_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_session_functions","(client)",""],["t_user_functions","FranklyClientTest","FranklyClientTest.html#method-i-t_user_functions","(client)",""],["test_announcement_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_announcement_functions","()",""],["test_app_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_app_functions","()",""],["test_file_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_file_functions","()",""],["test_message_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_message_functions","()",""],["test_open","FranklyClientTest","FranklyClientTest.html#method-i-test_open","()",""],["test_room_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_room_functions","()",""],["test_room_roles","FranklyClientTest","FranklyClientTest.html#method-i-test_room_roles","()",""],["test_session_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_session_functions","()",""],["test_user_functions","FranklyClientTest","FranklyClientTest.html#method-i-test_user_functions","()",""],["update","FranklyClient","FranklyClient.html#method-i-update","(path, params = {}, payload = {})","<p>This method exposes a generic interface for updating objects through the\nFrankly API. Every read_* method …\n"],["update","Generic","Generic.html#method-c-update","(address, headers, path, params, payload)",""],["update_file","Files","Files.html#method-c-update_file","(headers, destination_url, file_obj, file_size, mime_type, encoding = nil)",""],["update_file","FranklyClient","FranklyClient.html#method-i-update_file","(destination_url, file_obj, file_size, mime_type, encoding = nil)","<p>Creates a new file object on Frankly servers and returns that object. The\nproperties of that new file …\n"],["update_file_from_path","Files","Files.html#method-c-update_file_from_path","(headers, destination_url, file_path)",""],["update_file_from_path","FranklyClient","FranklyClient.html#method-i-update_file_from_path","(destination_url, file_path)","<p>Creates a new file object on Frankly servers and returns that object. The\nproperties of that new file …\n"],["update_room","FranklyClient","FranklyClient.html#method-i-update_room","(room_id, payload)","<p>Updates the existing room object with the id specified in the first\nargument and returns that object. …\n"],["update_room","Rooms","Rooms.html#method-c-update_room","(address, headers, room_id, payload)",""],["update_user","FranklyClient","FranklyClient.html#method-i-update_user","(user_id, payload)","<p>Updates an existing user object in the app and returns that object. The\nproperties of that new user are …\n"],["update_user","Users","Users.html#method-c-update_user","(address, headers, user_id, payload)",""],["upload","FranklyClient","FranklyClient.html#method-i-upload","(url, params, payload, content_length, content_type, content_encoding)","<p>This method exposes a generic interface for uploading file contents through\nthe Frankly API. Every upload_* …\n"],["upload","Generic","Generic.html#method-c-upload","(headers, url, params, payload, content_length, content_type, content_encoding)",""],["upload_file","Files","Files.html#method-c-upload_file","(address, headers, file_obj, file_size, mime_type, encoding = nil, params)",""],["upload_file","FranklyClient","FranklyClient.html#method-i-upload_file","(file_obj, file_size, mime_type, encoding = nil, params)","<p>This method is convenience wrapper for creating a new file object on the\nFrankly API and setting its …\n"],["upload_file_from_path","Files","Files.html#method-c-upload_file_from_path","(address, headers, file_path, params)",""],["upload_file_from_path","FranklyClient","FranklyClient.html#method-i-upload_file_from_path","(file_path, params)","<p>This method is convenience wrapper for creating a new file object on the\nFrankly API and setting its …\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; gemspec\n"],["LICENSE","","LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2015 Frankly Inc.\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>Frankly Ruby SDK\n<p>The Ruby gem makes it easy to create deeper Frankly chat integrations in\nyour app by …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rake/testtask&#39;\n<p>Rake::TestTask.new do |task|\n\n<pre>task.libs &lt;&lt; %w(test lib)\ntask.pattern = &#39;test/test_*.rb&#39;</pre>\n"],["created.rid","","doc/created_rid.html","",""],["frankly-ruby.gemspec","","frankly-ruby_gemspec.html","","<p>require File.expand_path(&#39;../lib/frankly-ruby/version&#39;, __FILE__)\n<p>Gem::Specification.new do |s| …\n"]]}}